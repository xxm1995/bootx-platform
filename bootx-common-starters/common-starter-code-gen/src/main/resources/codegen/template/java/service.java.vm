package ${corePack}.service;

import cn.bootx.platform.common.core.exception.DataNotExistException;
import cn.bootx.platform.common.core.rest.PageResult;
import cn.bootx.platform.common.core.rest.param.PageParam;
import cn.bootx.platform.common.core.util.ResultConvertUtil;
import cn.bootx.platform.common.mybatisplus.util.MpUtil;
import ${dtoPack}.${entityUpName}Dto;
import ${paramPack}.${entityUpName}Param;
import ${corePack}.convert.${entityUpName}Convert;
import ${corePack}.entity.${entityUpName};
import ${corePack}.dao.${entityUpName}Manager;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import cn.hutool.core.bean.BeanUtil;
import cn.hutool.core.bean.copier.CopyOptions;

import java.util.List;

/**
 * ${comments}
 * @author ${author}
 * @since ${datetime}
 */
@Slf4j
@Service
@RequiredArgsConstructor
public class ${entityUpName}Service {
    private final ${entityUpName}Manager ${entityLowName}Manager;

    /**
     * 添加
     */
    public void add(${entityUpName}Param param){
        ${entityUpName} ${entityLowName} = ${entityUpName}.init(param);
        ${entityLowName}Manager.save(${entityLowName});
    }

    /**
     * 修改
     */
    public void update(${entityUpName}Param param){
        ${entityUpName} ${entityLowName} = ${entityLowName}Manager.findById(param.getId()).orElseThrow(DataNotExistException::new);

        BeanUtil.copyProperties(param,${entityLowName}, CopyOptions.create().ignoreNullValue());
        ${entityLowName}Manager.updateById(${entityLowName});
    }

    /**
     * 分页
     */
    public PageResult<${entityUpName}Dto> page(PageParam pageParam,${entityUpName}Param ${entityLowName}Param){
        return MpUtil.convert2DtoPageResult(${entityLowName}Manager.page(pageParam,${entityLowName}Param));
    }

    /**
     * 获取单条
     */
    public ${entityUpName}Dto findById(Long id){
        return ${entityLowName}Manager.findById(id).map(${entityUpName}::toDto).orElseThrow(DataNotExistException::new);
    }

    /**
     * 获取全部
     */
    public List<${entityUpName}Dto> findAll(){
        return ResultConvertUtil.dtoListConvert(${entityLowName}Manager.findAll());
    }

    /**
     * 删除
     */
    public void delete(Long id){
        ${entityLowName}Manager.deleteById(id);
    }
}
